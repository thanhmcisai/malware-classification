from typing import Any

import numpy as np
import keras_tuner as kt
from fastapi import FastAPI, UploadFile, File
from gensim.models.doc2vec import Doc2Vec

from train import create_mlp_model
from test_r2pipe import load_opcode_from_binary_file

app = FastAPI()

embedding_model = Doc2Vec.load("d2v_model.model")

tuner = kt.Hyperband(
    create_mlp_model,
    objective='val_accuracy',
    max_epochs=20,
    factor=3,
    directory='results',
    project_name='malware-classify-mlp'
)
best_models = tuner.get_best_models(num_models=1)
malware_classify_model = best_models[0]

@app.post("/predict/")
async def predict(file: UploadFile = File(...)) -> Any:
    file_location = f"files/{file.filename}"
    with open(file_location, "wb+") as file_object:
        file_object.write(file.file.read())
    
    # Load opcode using radare2
    opcode_word_list, opcode_list = load_opcode_from_binary_file(file_location)

    # Embedding opcode
    embedding_file = embedding_model.infer_vector(doc_words=opcode_word_list, epochs=100, alpha=0.025)

    # Classify malware
    malware_predict = malware_classify_model.predict(np.expand_dims(embedding_file, axis=0), verbose=0)

    return {
        "filename": file.filename,
        "opcode_list": opcode_list,
        "prediction": {
            "beggin": malware_predict[0][0] * 100,
            "malware": malware_predict[0][1] * 100
        }
    }
